@startuml

top to bottom direction

class CreateExamUI {
    + verifyExam(fileName)
    + createExam(examCode, title, courseCode, openDate, closeDate, fileName) : examDto
}

class CreateExamController {
    * ExamRepository
    * VerifyExamService
    + verifyExam
    + createExam(String code, String title, String courseCode, String openDate, String closeDate, String filename) : examDto
}

class VerifyExamService {

}

class ExamDto {
     * code
     * name
     * description
     * CourseCode
     * openDate
     * closeDate
     + ExamDto(String code, String name, String description, String courseCode, String openDate, String closeDate)
     + ExamDto toDto(exam)
     + toString()
}

class SystemUser <<root>> <<Entity>> {
    * Name
    * Username
}

class eCourseSystemUser <<root>> <<Entity>> {

}

class EmailAdderss <<Value object>>

class Role <<Entity>> {
    * String name
}

class UserStatus <<enum>> {
    + ENABLE
    + DISABLE
}

class Password <<value object>>

class Acronym <<value object>>

class NIF <<value object>>

class BirthDate <<value object>>

class MechanographicNumber <<value object>> <<automatically generated>>

class Grade <<value object>>

class Course {
    * int id
    * name
    * CourseStatus status
    * Code code
    * Teacher regent
    + Course(int id, String name, CourseStatus status, Code code, Teacher regent)
}

class Exam <<root>> <<event>> {
    * title <<unique>>
    * openDate
    * closeDate
}

class ExamGrade <<value object>> {
    * int grade
    * eCourseSystemUser student
}

class RepositoryFactory {

}

class ExamRepository {
    + addExam(Exam: Exam)
    + removeExam(Exam: Exam)
    + searchExam(Exam: Exam): Exam
    + totalNumberOfExams(): int
}

class ExamReadFile {
    + FileToString(String path) : List<String>
}



SystemUser --> "1" EmailAdderss
SystemUser --> "1" Password
SystemUser --> "1" Role

eCourseSystemUser --> "1" SystemUser
eCourseSystemUser --> "1" Role
eCourseSystemUser --> "1" UserStatus
eCourseSystemUser --> "1" Acronym
eCourseSystemUser --> "1" NIF
eCourseSystemUser --> "1" BirthDate
eCourseSystemUser --> "1" MechanographicNumber
eCourseSystemUser --> "1" Grade : student has a >

eCourseSystemUser --> VerifyExamService : uses >

eCourseSystemUser "*" - "*" Exam : creates/updates >


Course --> "1" CourseStatus
Course --> "1" CourseCode

Course "1" -- "1" Grade : refers to <
Course "1" -- "0..*" Exam : related to <

Course "*" - "*" eCourseSystemUser : teaches <

Exam "1" -- "1" ExamGrade : has >
ExamGrade "1" -- "1" eCourseSystemUser : has >


eCourseSystemUser .. CreateExamUI
CreateExamUI .. ExamDto
CreateExamUI .. CreateExamController
CreateExamController .. RepositoryFactory
CreateExamController .. ExamRepository
CreateExamController ..VerifyExamService
CreateExamController .. Exam
CreateExamController .. ExamDto
CreateExamController .. ExamReadFile
VerifyExamService .. Exam




@enduml